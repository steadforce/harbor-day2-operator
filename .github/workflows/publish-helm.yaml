name: Publish Helm Chart

# Trigger on release events for main and helm-chart branches
on:
  release:
    types: [published]
    branches:
      - main
      - helm-chart

env:
  REGISTRY: ghcr.io
  CHART_DIR: chart
  HELM_VERSION: v3.12.3

jobs:
  build:
    name: Build and Validate Chart
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Check out repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Update chart version
        run: |
          # Extract version from release tag and remove 'v' prefix if present
          VERSION=${GITHUB_REF#refs/tags/}
          VERSION=${VERSION#v}
          echo "Setting chart version and appVersion to: ${VERSION}"
          # Synchronize 'version' and 'appVersion' fields in Chart.yaml to ensure consistency.
          # This project uses the same version for both the chart and the application it deploys.
          yq e -i '.version = "'${VERSION}'"' ${{ env.CHART_DIR }}/Chart.yaml
          yq e -i '.appVersion = "'${VERSION}'"' ${{ env.CHART_DIR }}/Chart.yaml

      - name: Lint chart
        run: helm lint ${{ env.CHART_DIR }}

      - name: Validate chart template
        run: helm template ${{ env.CHART_DIR }}

      - name: Package chart
        run: helm package ${{ env.CHART_DIR }}

      - name: Upload chart artifact
        if: ${{ !github.event.act }}
        uses: actions/upload-artifact@v5
        with:
          name: helm-chart
          path: ./*.tgz

  publish:
    name: Publish to Registry
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    # Skip this job when running with Act
    if: ${{ !github.event.act }}
    steps:
      - name: Download chart artifact
        uses: actions/download-artifact@v6
        with:
          name: helm-chart

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push chart to registry
        run: |
          echo "Publishing Helm chart to ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.CHART_DIR }}"
          helm push *.tgz oci://${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.CHART_DIR }}
